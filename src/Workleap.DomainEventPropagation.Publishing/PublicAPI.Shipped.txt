#nullable enable
const Workleap.DomainEventPropagation.EventPropagationPublisherOptions.EventGridClientName = "DomainEventPropagation" -> string!
static Workleap.DomainEventPropagation.ServiceCollectionEventPropagationExtensions.AddEventPropagationPublisher(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> Workleap.DomainEventPropagation.IEventPropagationPublisherBuilder!
static Workleap.DomainEventPropagation.ServiceCollectionEventPropagationExtensions.AddEventPropagationPublisher(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, System.Action<Workleap.DomainEventPropagation.EventPropagationPublisherOptions!>! configure) -> Workleap.DomainEventPropagation.IEventPropagationPublisherBuilder!
Workleap.DomainEventPropagation.EventPropagationPublisherOptions
Workleap.DomainEventPropagation.EventPropagationPublisherOptions.EventPropagationPublisherOptions() -> void
Workleap.DomainEventPropagation.EventPropagationPublisherOptions.TokenCredential.get -> Azure.Core.TokenCredential?
Workleap.DomainEventPropagation.EventPropagationPublisherOptions.TokenCredential.set -> void
Workleap.DomainEventPropagation.EventPropagationPublisherOptions.TopicAccessKey.get -> string!
Workleap.DomainEventPropagation.EventPropagationPublisherOptions.TopicAccessKey.set -> void
Workleap.DomainEventPropagation.EventPropagationPublisherOptions.TopicEndpoint.get -> string!
Workleap.DomainEventPropagation.EventPropagationPublisherOptions.TopicEndpoint.set -> void
Workleap.DomainEventPropagation.EventPropagationPublisherOptions.TopicName.get -> string?
Workleap.DomainEventPropagation.EventPropagationPublisherOptions.TopicName.set -> void
Workleap.DomainEventPropagation.EventPropagationPublisherOptions.TopicType.get -> Workleap.DomainEventPropagation.TopicType
Workleap.DomainEventPropagation.EventPropagationPublisherOptions.TopicType.set -> void
Workleap.DomainEventPropagation.EventPropagationPublishingException
Workleap.DomainEventPropagation.EventPropagationPublishingException.EventPropagationPublishingException(string! domainEventName, string! topicEndpoint, System.Exception! innerException) -> void
Workleap.DomainEventPropagation.IEventPropagationPublisherBuilder
Workleap.DomainEventPropagation.IEventPropagationPublisherBuilder.Services.get -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
Workleap.DomainEventPropagation.ServiceCollectionEventPropagationExtensions
Workleap.DomainEventPropagation.TopicType
Workleap.DomainEventPropagation.TopicType.Custom = 0 -> Workleap.DomainEventPropagation.TopicType
Workleap.DomainEventPropagation.TopicType.Namespace = 1 -> Workleap.DomainEventPropagation.TopicType