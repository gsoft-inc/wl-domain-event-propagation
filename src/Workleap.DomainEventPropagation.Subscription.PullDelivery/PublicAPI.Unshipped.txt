#nullable enable
static Workleap.DomainEventPropagation.ServiceCollectionEventSubscriptionExtensions.AddPullDeliverySubscription(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> Workleap.DomainEventPropagation.IEventPullerBuilder!
Workleap.DomainEventPropagation.EventPropagationSubscriptionOptions
Workleap.DomainEventPropagation.EventPropagationSubscriptionOptions.EventPropagationSubscriptionOptions() -> void
Workleap.DomainEventPropagation.EventPropagationSubscriptionOptions.SubscriptionName.get -> string!
Workleap.DomainEventPropagation.EventPropagationSubscriptionOptions.SubscriptionName.set -> void
Workleap.DomainEventPropagation.EventPropagationSubscriptionOptions.TokenCredential.get -> Azure.Core.TokenCredential?
Workleap.DomainEventPropagation.EventPropagationSubscriptionOptions.TokenCredential.set -> void
Workleap.DomainEventPropagation.EventPropagationSubscriptionOptions.TopicAccessKey.get -> string!
Workleap.DomainEventPropagation.EventPropagationSubscriptionOptions.TopicAccessKey.set -> void
Workleap.DomainEventPropagation.EventPropagationSubscriptionOptions.TopicEndpoint.get -> string!
Workleap.DomainEventPropagation.EventPropagationSubscriptionOptions.TopicEndpoint.set -> void
Workleap.DomainEventPropagation.EventPropagationSubscriptionOptions.TopicName.get -> string!
Workleap.DomainEventPropagation.EventPropagationSubscriptionOptions.TopicName.set -> void
Workleap.DomainEventPropagation.EventPropagationSubscriptionOptionsValidator
Workleap.DomainEventPropagation.EventPropagationSubscriptionOptionsValidator.EventPropagationSubscriptionOptionsValidator() -> void
Workleap.DomainEventPropagation.EventPropagationSubscriptionOptionsValidator.Validate(string! name, Workleap.DomainEventPropagation.EventPropagationSubscriptionOptions! options) -> Microsoft.Extensions.Options.ValidateOptionsResult!
Workleap.DomainEventPropagation.GlobalSubscriptionHandlerAttribute
Workleap.DomainEventPropagation.GlobalSubscriptionHandlerAttribute.GlobalSubscriptionHandlerAttribute() -> void
Workleap.DomainEventPropagation.IEventPullerBuilder.AddGlobalDomainEventHandlers(System.Reflection.Assembly! assembly) -> Workleap.DomainEventPropagation.IEventPullerBuilder!
Workleap.DomainEventPropagation.IEventPullerBuilder.AddSubscriber(string! optionsSectionName, System.Action<Workleap.DomainEventPropagation.EventPropagationSubscriptionOptions!>! configureOptions, System.Action<Workleap.DomainEventPropagation.ISubscriptionHandlerBuilder!>! configureSubscriber) -> Workleap.DomainEventPropagation.IEventPullerBuilder!
Workleap.DomainEventPropagation.IEventPullerBuilder.AddSubscriber(string! optionsSectionName, System.Action<Workleap.DomainEventPropagation.ISubscriptionHandlerBuilder!>! configureSubscriber) -> Workleap.DomainEventPropagation.IEventPullerBuilder!
Workleap.DomainEventPropagation.IEventPullerBuilder.AddSubscriber(System.Action<Workleap.DomainEventPropagation.ISubscriptionHandlerBuilder!>! configureSubscriber) -> Workleap.DomainEventPropagation.IEventPullerBuilder!
Workleap.DomainEventPropagation.ISubscriptionHandler.HandleCloudEventAsync(Azure.Messaging.CloudEvent! cloudEvent, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Workleap.DomainEventPropagation.EventProcessingStatus>!
Workleap.DomainEventPropagation.ISubscriptionHandlerBuilder
Workleap.DomainEventPropagation.ISubscriptionHandlerBuilder.AddDomainEventHandler<TEvent, THandler>() -> Workleap.DomainEventPropagation.ISubscriptionHandlerBuilder!
Workleap.DomainEventPropagation.ISubscriptionHandlerBuilder.AddDomainEventHandlers(System.Reflection.Assembly! assembly) -> Workleap.DomainEventPropagation.ISubscriptionHandlerBuilder!
Workleap.DomainEventPropagation.ISubscriptionHandlerBuilder.Services.get -> Microsoft.Extensions.DependencyInjection.IServiceCollection!
Workleap.DomainEventPropagation.ServiceCollectionEventSubscriptionExtensions